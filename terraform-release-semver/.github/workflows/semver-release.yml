name: Semantic Versioning

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  pull_request_target:
    types: [closed]

jobs:
  validate-labels:
    name: Validate PR Labels
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check for version labels
        id: check-labels
        run: |
          LABELS=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")
          if echo "$LABELS" | grep -qE 'release/major|release/minor|release/patch'; then
            echo "PR has a valid version label"
            exit 0
          else
            echo "::error::PR must have one of the following labels: release/major, release/minor, release/patch"
            exit 1
          fi

  check-multiple-version-labels:
    name: Check for Multiple Version Labels
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check for multiple version labels
        id: check-multiple-labels
        run: |
          MAJOR=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH" | grep -c "release/major" || true)
          MINOR=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH" | grep -c "release/minor" || true)
          PATCH=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH" | grep -c "release/patch" || true)
          
          TOTAL=$((MAJOR + MINOR + PATCH))
          
          if [ "$TOTAL" -gt 1 ]; then
            echo "::error::PR has multiple version labels. Please use only one of: release/major, release/minor, release/patch"
            exit 1
          fi
          
          echo "PR has the correct number of version labels"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version label
        id: get-label
        run: |
          LABELS=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")
          if echo "$LABELS" | grep -q "release/major"; then
            echo "VERSION_TYPE=major" >> $GITHUB_OUTPUT
          elif echo "$LABELS" | grep -q "release/minor"; then
            echo "VERSION_TYPE=minor" >> $GITHUB_OUTPUT
          elif echo "$LABELS" | grep -q "release/patch"; then
            echo "VERSION_TYPE=patch" >> $GITHUB_OUTPUT
          else
            echo "::error::No version label found"
            exit 1
          fi

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: ${{ steps.get-label.outputs.VERSION_TYPE }}
          tag_prefix: v

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            ## Changes in this Release
            ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false
